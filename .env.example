# ===================================================================
# Vrexis Insights - Environment Configuration
# ===================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Server Configuration
PORT=8080

# Database Configuration
DB_PATH=vrexis_insights.db

# JWT Secrets (CHANGE THESE IN PRODUCTION!)
# Generate with: openssl rand -hex 32
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-32-chars-minimum
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production-32-chars-minimum

# CORS Configuration
# For development: http://localhost:3000,http://127.0.0.1:3000
# For production: https://yourdomain.com,https://www.yourdomain.com
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Logging
LOG_LEVEL=info

# Rate Limiting
RATE_LIMIT_WINDOW_MINUTES=15
RATE_LIMIT_MAX_REQUESTS=5

# ===================================================================
# PRODUCTION EXAMPLE (.env.production)
# ===================================================================
# Copy this section to .env.production for production deployment

# ENVIRONMENT=production
# PORT=8080
# DB_PATH=/data/vrexis_insights.db
# JWT_SECRET=a8f5f167f44f4964e6c998dee827110c
# JWT_REFRESH_SECRET=b9e6a178e55e5075f7d009eef938221d
# ALLOWED_ORIGINS=https://vrexisinsights.com,https://www.vrexisinsights.com
# LOG_LEVEL=warn
# RATE_LIMIT_WINDOW_MINUTES=15
# RATE_LIMIT_MAX_REQUESTS=5

# ===================================================================
# GENERATE SECURE SECRETS
# ===================================================================
# Run these commands to generate secure secrets:
# 
# JWT_SECRET:
# openssl rand -hex 32
# 
# JWT_REFRESH_SECRET:
# openssl rand -hex 32
#
# Or use this Go command:
# go run -c "package main; import (\"crypto/rand\"; \"encoding/hex\"; \"fmt\"); func main() { b := make([]byte, 32); rand.Read(b); fmt.Println(hex.EncodeToString(b)) }"
